// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: weather.proto
// Protobuf Java Version: 4.30.1

package sr.grpc.gen.event;

/**
 * <pre>
 * Enum defining the types of events clients can subscribe to
 * </pre>
 *
 * Protobuf enum {@code eventsubscription.EventType}
 */
public enum EventType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Default value, should not be used
   * </pre>
   *
   * <code>EVENT_TYPE_UNSPECIFIED = 0;</code>
   */
  EVENT_TYPE_UNSPECIFIED(0),
  /**
   * <code>WEATHER_UPDATE = 1;</code>
   */
  WEATHER_UPDATE(1),
  /**
   * <pre>
   * Example of another potential event type
   * </pre>
   *
   * <code>CONCERT_ALERT = 2;</code>
   */
  CONCERT_ALERT(2),
  /**
   * <pre>
   * Example of another potential event type
   * </pre>
   *
   * <code>NEWS_FLASH = 3;</code>
   */
  NEWS_FLASH(3),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 30,
      /* patch= */ 1,
      /* suffix= */ "",
      EventType.class.getName());
  }
  /**
   * <pre>
   * Default value, should not be used
   * </pre>
   *
   * <code>EVENT_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int EVENT_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>WEATHER_UPDATE = 1;</code>
   */
  public static final int WEATHER_UPDATE_VALUE = 1;
  /**
   * <pre>
   * Example of another potential event type
   * </pre>
   *
   * <code>CONCERT_ALERT = 2;</code>
   */
  public static final int CONCERT_ALERT_VALUE = 2;
  /**
   * <pre>
   * Example of another potential event type
   * </pre>
   *
   * <code>NEWS_FLASH = 3;</code>
   */
  public static final int NEWS_FLASH_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EventType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EventType forNumber(int value) {
    switch (value) {
      case 0: return EVENT_TYPE_UNSPECIFIED;
      case 1: return WEATHER_UPDATE;
      case 2: return CONCERT_ALERT;
      case 3: return NEWS_FLASH;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EventType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EventType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
          public EventType findValueByNumber(int number) {
            return EventType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return sr.grpc.gen.event.EventSubscriptionProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final EventType[] VALUES = values();

  public static EventType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EventType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:eventsubscription.EventType)
}

