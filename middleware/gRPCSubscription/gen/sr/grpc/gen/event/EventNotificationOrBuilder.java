// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: weather.proto
// Protobuf Java Version: 4.30.1

package sr.grpc.gen.event;

public interface EventNotificationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:eventsubscription.EventNotification)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Server-generated ID for this specific notification
   * </pre>
   *
   * <code>string notification_id = 1;</code>
   * @return The notificationId.
   */
  java.lang.String getNotificationId();
  /**
   * <pre>
   * Server-generated ID for this specific notification
   * </pre>
   *
   * <code>string notification_id = 1;</code>
   * @return The bytes for notificationId.
   */
  com.google.protobuf.ByteString
      getNotificationIdBytes();

  /**
   * <pre>
   * The ID the client provided
   * </pre>
   *
   * <code>string client_subscription_id = 2;</code>
   * @return The clientSubscriptionId.
   */
  java.lang.String getClientSubscriptionId();
  /**
   * <pre>
   * The ID the client provided
   * </pre>
   *
   * <code>string client_subscription_id = 2;</code>
   * @return The bytes for clientSubscriptionId.
   */
  com.google.protobuf.ByteString
      getClientSubscriptionIdBytes();

  /**
   * <pre>
   * Server timestamp
   * </pre>
   *
   * <code>int64 timestamp_unix_seconds = 3;</code>
   * @return The timestampUnixSeconds.
   */
  long getTimestampUnixSeconds();

  /**
   * <pre>
   * Type of the event payload
   * </pre>
   *
   * <code>.eventsubscription.EventType event_type = 4;</code>
   * @return The enum numeric value on the wire for eventType.
   */
  int getEventTypeValue();
  /**
   * <pre>
   * Type of the event payload
   * </pre>
   *
   * <code>.eventsubscription.EventType event_type = 4;</code>
   * @return The eventType.
   */
  sr.grpc.gen.event.EventType getEventType();

  /**
   * <code>.eventsubscription.WeatherUpdate weather_update = 5;</code>
   * @return Whether the weatherUpdate field is set.
   */
  boolean hasWeatherUpdate();
  /**
   * <code>.eventsubscription.WeatherUpdate weather_update = 5;</code>
   * @return The weatherUpdate.
   */
  sr.grpc.gen.event.WeatherUpdate getWeatherUpdate();
  /**
   * <code>.eventsubscription.WeatherUpdate weather_update = 5;</code>
   */
  sr.grpc.gen.event.WeatherUpdateOrBuilder getWeatherUpdateOrBuilder();

  /**
   * <code>.eventsubscription.ConcertAlert concert_alert = 6;</code>
   * @return Whether the concertAlert field is set.
   */
  boolean hasConcertAlert();
  /**
   * <code>.eventsubscription.ConcertAlert concert_alert = 6;</code>
   * @return The concertAlert.
   */
  sr.grpc.gen.event.ConcertAlert getConcertAlert();
  /**
   * <code>.eventsubscription.ConcertAlert concert_alert = 6;</code>
   */
  sr.grpc.gen.event.ConcertAlertOrBuilder getConcertAlertOrBuilder();

  /**
   * <code>.eventsubscription.NewsFlash news_flash = 7;</code>
   * @return Whether the newsFlash field is set.
   */
  boolean hasNewsFlash();
  /**
   * <code>.eventsubscription.NewsFlash news_flash = 7;</code>
   * @return The newsFlash.
   */
  sr.grpc.gen.event.NewsFlash getNewsFlash();
  /**
   * <code>.eventsubscription.NewsFlash news_flash = 7;</code>
   */
  sr.grpc.gen.event.NewsFlashOrBuilder getNewsFlashOrBuilder();

  sr.grpc.gen.event.EventNotification.EventPayloadCase getEventPayloadCase();
}
